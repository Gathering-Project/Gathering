
spring:
  cloud:
    aws:
      s3:
        bucket: ${cloud.aws.s3.bucket}
      credentials:
        accessKey: ${cloud.aws.s3.credentials.access-key}
        secretKey: ${cloud.aws.s3.credentials.secret-key}
      region:
        static: ${cloud.aws.s3.region.static}
      stack:
        auto: false

#  config:
#    import: optional:file:.env[.properties]
#    datasource:
#      url: jdbc:mysql://wemeetnowdb.chmy408yifq6.ap-northeast-2.rds.amazonaws.com:3306/minjudb?useSSL=false&serverTimezone=Asia/Seoul
#      username: minjooig
#      password:
#      driver-class-name: com.mysql.cj.jdbc.Driver

  config:
    import: optional:file:.env[.properties]
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://mysql_container:3306/${MYSQL_DB_NAME}?serverTimezone=Asia/Seoul
    url: jdbc:mysql://localhost:3306/${MYSQL_DB_NAME}?serverTimezone=Asia/Seoul
    username: ${MYSQL_NAME}
    password: ${MYSQL_PASSWORD}

  kafka:
    bootstrap-servers: "localhost:19092,localhost:19093,localhost:19094"
#  kafka:
#    bootstrap-servers: "kafka1:9092,kafka2:9093,kafka3:9094"

    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

  data:
    redis:
      port: 6379
      host: 127.0.0.1

  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
      enabled: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${kakao.client.id}
            client-secret: ${kakao.client.secret}
            redirect-uri: ${kakao.redirect.url}
            authorization-grant-type: authorization_code
            scope:
              - profile
              - account_email
          naver: # 네이버 OAuth 설정 추가
            client-id: ${naver.client.id}
            client-secret: ${naver.client.secret}
            scope:
              - email
              - nickname
            client-name: Naver
            redirect-uri: ${naver.redirect.url}
            authorization-grant-type: authorization_code
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

jwt:
  secret:
    key: ${JWT_SECRET_KEY}

admin:
  token: ${ADMIN_TOKEN}

#logging:
#   level:
#     root: TRACE

#logging:
#  level:
#    root: DEBUG
