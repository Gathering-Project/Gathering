plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'nbc_final'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {

    all {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }

    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    archiveFileName = 'Gathering-0.0.1-SNAPSHOT.jar' // Docker에서 사용할 JAR 이름 설정
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // elasticsearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring test, JUnit
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'it.ozimov:embedded-redis:0.7.3'

    // prometheous
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // 헬스체크
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // jackson 직렬화/역직렬화
    implementation platform('com.fasterxml.jackson:jackson-bom:2.17.2')
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-core'


    // Spring-Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // bcrypt
    implementation 'at.favre.lib:bcrypt:0.10.2'

    // AWS S3
    implementation 'software.amazon.awssdk:s3:2.20.89'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // aws
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Spring Boot Web and Data JPA for database interactions
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // jwt
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // Kafka
    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    //OAuth2.0
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //Redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.21.1'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // 채팅 구현
    implementation 'org.springframework.boot:spring-boot-starter-websocket' // ws
    implementation 'org.springframework.boot:spring-boot-starter-amqp' // rabbitmq와 같은 외부 메시지 브로커 사용
    implementation 'org.springframework:spring-messaging' // @MessageMapping 기능처럼 메시지 처리 기능
    implementation 'org.springframework.boot:spring-boot-starter-reactor-netty:3.0.0' // 서버 <-> rabbitmq의 비동기 네트워크 처리

    // ASM 라이브러리
    implementation 'org.ow2.asm:asm-util:9.4'

    implementation 'org.json:json:20210307'
    implementation 'org.springframework:spring-context'

    //Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    //TestContainers
    testImplementation("org.testcontainers:junit-jupiter:1.20.1")
    testImplementation("org.testcontainers:mysql:1.20.1")
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('testJar', Jar) {
    exclude 'junit-platform.properties'
}