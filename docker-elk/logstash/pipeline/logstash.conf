input {
  beats {
    port => 5044
  }

  tcp {
    port => 50000
  }

  # 추가: file input 추가, 필요한 경우
  file {
    path => "/usr/share/logstash/input/errors.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"  # sincedb를 사용하지 않음 (파일을 처음부터 끝까지 읽기 위해)
    codec => plain { charset => "UTF-8" }
  }
}

filter {
  grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} - %{GREEDYDATA:log_message} - %{NUMBER:status_code}" }
  }

  # 4xx와 5xx 응답 상태 코드에 대해 'error' 태그 추가
  if [status_code] =~ "^[45]" {
    mutate { add_tag => ["error"] }
  }

  # timestamp 필드를 Elasticsearch에서 사용할 수 있도록 변환
  date {
    match => ["timestamp", "ISO8601"]
    target => "@timestamp"
  }

  # 상태 코드 필드를 정수로 변환
  mutate {
    convert => { "status_code" => "integer" }
  }
}

output {
  # error-logs 인덱스에 데이터 추가
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "error-logs"
  }

  # gathering-logs 인덱스에 데이터 추가
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "gathering-logs"
  }
}
